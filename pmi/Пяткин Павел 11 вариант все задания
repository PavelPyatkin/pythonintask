# Pyatkin Pavel Yur`evich
# Variant 11
# task1
print ("Алессандро Филипели известен более, как великий итальянский живописец эпохи Возрождения Сандро Боттичелли ")
input("\n\nНажмите Enter, чтобы выйти.")
# Pyatkin Pavel Yur`evich
# Variant 11
# task2
print ("Тот не даст себя в обиду в этом мире, кто умеет разбираться в женских фокусах и увертках.")
print ("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tО`Генри")
input("\n\nНажмите Enter, чтобы выйти.")
# Pyatkin Pavel Yur`evich
# Variant 11
# task3
print('Герой нашей сегодняшней программы - Анна Андреевна Горенко.\nПод каким же именем мы знаем этого человека?' )
name=input('Ваш ответ: ')
if name=='Анна Ахматова':
print ('Все верно: Анна Андреевна Горенко -',name)
else:
print('Псевдоним введен не верно!')
input ('Нажмите Enter для выхода')
# Pyatkin Pavel Yur`evich
# Variant 11
# task4
interest= 'Юхани Ахо - финский писатель, журналист, переводчик'
print('Йоханнес Бруфельдт более известен, как ', interest)
PlaceOfBirth='Лапинлахти, Финляндия'
print('Место рождения: ', PlaceOfBirth)
YearOfBirth=1861
print('Год рождения: ', YearOfBirth)
YearOfDeath=1921
Age=2017-YearOfDeath
print('Возраст: ', Age)
input ('Нажмите Enter для выхода')
# Pyatkin Pavel Yur`evich
# Variant 11
# task5
import random
TheNamesOfSantaClausDeer=['Дэшер', 'Дэнсер', 'Прэнсер', 'Виксен', 'Комет', 'Кьюпид', 'Дондер', 'Блитцен', 'Рудольф']
print(random.choice(TheNamesOfSantaClausDeer))
input('Нажмите Enter')
# Pyatkin Pavel Yur`evich
# Variant 11
# task6
import random
RailwayStation = [ 'Белорусский', 'Казанский', 'Киевский', 'Курский', 'Ленинградский', 'Павелецкий', 'Рижский', 'Савёловский', 'Ярославский']
VvodRailwayStation=input ('Назовите один из Московских вокзалов:')
a=random.choice(RailwayStation)
if a==RailwayStation:
print ('Вы угадали! \n Правильный ответ',a)
else:
print('Вы не угадали ! \n Правильный ответ', a)
input ('Нажмите Enter')
# Pyatkin Pavel Yur`evich
# Variant 11
# task7
import random
print ('Программа случайным образом загадывает название одной из 6 шахматных фигур, а игрок должен угадать ее.\nЧем меньше попыток Вы используете, тем больше баллов заработаете.')
RailwayStation = [ 'Белорусский', 'Казанский', 'Киевский', 'Курский', 'Ленинградский', 'Павелецкий', 'Рижский', 'Савёловский', 'Ярославский']
VvodRailwayStation=input ('Назовите один из Московских вокзалов:')
a=random.choice(RailwayStation)
i=1
while a!=VvodRailwayStation:
    print ('Вы не угадали! \nПопробуйте еще раз')
    VvodRailwayStation= input('Назовите один из Московских вокзалов:')
    i+=1
else:
    print ('Вы угадали!')
print ('Вам начисленно ', 11000-(i*1000))

input ('Нажмите Enter')
# Pyatkin Pavel Yur`evich
# Variant 11
# task8
import random

WORDS = ("python", "anagram", "easy",
         "Hard", "answer", "glass-holder")

word = random.choice(WORDS)

correct = word

i_dont_know = "i dont know"
hint = word[0] + word[1] + word[2]

jumble = ""
while word:
    position = random.randrange(len(word))
    jumble += word[position]
    word = word[:position] + word[(position + 1):]

scores = 10

print(
    """

                                           Welcome to the game 'Anagrams'!
                        It is necessary to rearrange the letters so as to obtain a meaningful word.
                               If you need help, enter: "I do not know."
           But remember, if you do not use a hint, the number of points earned will be more.
                            (To exit, press Enter, without introducing its version.)
    """
)
print("Here is an anagram: ", jumble)
guess = input("\nTry to guess the original word: ")
while guess != "" and guess != correct:
    if guess != correct and not guess == i_dont_know:
        print("Unfortunately, you are wrong.")
    if guess == i_dont_know:
        scores -= 5
        print("\nHint! The first three letters of the word!", hint)
    guess = input("Try to guess the original word: ")
    if guess == correct:
        print("Yes exactly! You guessed!\n")

if scores < 0:
    scores = 0
print("Thanks for the game! You scores: ", scores)
input("\n\nPress Enter...")

# Pyatkin Pavel Yur`evich
# Variant 11
# task9
import random

WORDS=("чайник", "книга", "фотография", "стол")
# случайным образом выберем из последовательности одно слово
word = random.choice(WORDS)
length=len(word)

# начало игры
print(
"""
Добро пожаловать в игру 'Отгадай слово'!
Надо попытаться догадаться, какое слово загадал компьютер.
(Для выхода нажмите Enter. не вводя своей версии.)
"""
)

# отметка, сколько было подсказок
adviced=0

print("Длина загаданного слова: " + str(length))
print("Сейчас вы можете спросить компьютер, есть ли в слове любая из букв алфавита:")
while adviced < 5:
    char=input("Введите букву: ")
    if char == "":
        break;
    if word.find(char) > -1:
        print("Буква " + char + " есть в слове!")
    else:
        print("Буквы " + char + " в слове нет!")
    adviced = adviced + 1


if char != "":
    guess = input("\nПопробуйте отгадать исходное слово: ")

    while (guess != word or guess == "") and char != "":
        if guess == "":
            break
        print("K сожалению. вы неправы.")
        guess = input("Попробуйте отгадать исходное слово: ")

    if guess == word:
        print("Дa. именно так! Вы отгадали! Слово: " + word)

print("Cnacибo за игру.")
input("\nHaжмитe Enter. чтобы выйти.")
# Pyatkin Pavel Yur`evich
# Variant 11
# task10
available=30
characteristics = ("Сила", "Здоровье", "Мудрость", "Ловкость")
values=[0, 0, 0, 0]

print(
"""
Добро пожаловать в Генератор персонажей.
Сейчас вы сможете распределенить некоторое количество пунктов между несколькими характеристиками персонажа.
Чтобы добавить один пункт в характеристику, просто напишите название характеристики. Чтобы добавить сразу несколько пунктов, поставьте пробел и укажите количество пунктов.
    Например:
        "Сила" - добавит один пункт к Силе.
        "Сила 10" - добавит 10 пунктов к Силе.
Чтобы удалить один пункт, поставьте знак минус и напишите название характеристики. Чтобы удалить сразу несколько пунктов, поставьте пробел и укажите количество пунктов.
    Например:
        "-Здоровье" - уберет один пункт от Здоровья.
        "-Здоровье 10" - уберет 10 пунктов от Здоровья.
"""
)

cmd="start"
while cmd != "":
    print()
    if cmd[0] == "-":
        space_pos = cmd.find(" ")
        if space_pos > 0:
            characteristic = cmd[1:space_pos]
            count = int(cmd[space_pos:])
        else:
            characteristic = cmd[1:]
            count = 1

        if characteristics.count(characteristic) > 0:
            i = characteristics.index(characteristic)
            if values[i] == 0:
                print("Данная характеристика не имеет пунктов.")
                print()
            else:
                if values[i] < count:
                    count = values[i]

                values[i] -= count
                available += count
    else:
        if cmd != "start":
            if available == 0:
                print("Свободных пунктов не осталось. Снимите пункты с других характеристик.")
            else:
                space_pos = cmd.find(" ")
                if space_pos > 0:
                    characteristic = cmd[0:space_pos]
                    count = int(cmd[space_pos:])
                else:
                    characteristic = cmd[0:]
                    count = 1

                if characteristics.count(characteristic) > 0:
                    i = characteristics.index(characteristic)
                    if available < count:
                        count = available
                    values[i] += count
                    available -= count
                    print()

    print("Текущее распределение: ")
    for i, char in enumerate(characteristics):
        print(char + "(" + str(values[i]) + "):" + str("+" * values[i]))
    print("Доступно пунктов: " + str(available))

    cmd=input("\nВведите команду или нажмите Enter для завершения: ")
# Pyatkin Pavel Yur`evich
# Variant 11
# task11
X = "X"
O = "O"
EMPTY = " "
TIE = "Ничья"
NUM_SQUARES = 9

def display_instr():
    print("Инструкция")

def ask_yes_no(question):
    respone = None
    while respone not in ("y","n"):
        respone = input(question).lower()
    return respone

def ask_number(question, low, high):
    respone = None
    while respone not in range(low, high):
        respone = int(input(question))
    return respone

def pieces():
    go_first = ask_yes_no("Хочешь оставить за собой первый ход? (y/n): ")
    if go_first == "y":
        print("Ну что ж, даю тебе фору, играй крестикаи")
        human = X
        computer = O
    else:
        print("Твоя удаль тебя погубит... Буду начинать я.")
        human = O
        computer = X
    return computer,human

def new_board():
    board=[]
    for square in range(NUM_SQUARES):
        board.append(EMPTY)
    return board

def display_board(board):
    print("\n\t",board[0],"|",board[1],"|", board[2])
    print("\t","----------")
    print("\n\t",board[3],"|",board[4],"|", board[5])
    print("\t","----------")
    print("\n\t",board[6],"|",board[7],"|", board[8], "\n")

def legal_moves(board):
    moves=[]
    for square in range(NUM_SQUARES):
        if board[square] == EMPTY:
            moves.append(square)
    return moves

def winner(board):
    WAYS_TO_WIN = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
    for row in WAYS_TO_WIN:
        if board[row[0]] == board[row[1]]==board[row[2]] != EMPTY:
            winner = board[row[0]]
            return winner
    if board_full(board):
        return TIE

def board_full(board):
    for i in range(0, 8):
        if board[i] == EMPTY:
            return False
    return True


def human_move(board,human):
    legal = legal_moves(board)
    move = None
    while move not in legal:
        move = ask_number("Твой ход. Выбери поля (1-9): ", 1, NUM_SQUARES + 1)
        move -= 1
        if move not in legal:
            print("Смешной человек! Это поле уже занято.")
        return move

def computer_move(board, computer, human):
    board = board[:]
    BEST_MOVES=(4,0,2,6,8,1,3,5,7)
    print("Я выберу поле номер", end = " ")
    for move in legal_moves(board):
        board[move]=human
        if winner(board) == human:
            print(move)
            return move
        board[move] = EMPTY
    for move in legal_moves(board):
        board[move]=human
        if winner(board) == human:
            print(move)
            return move


def next_turn(turn):
    if turn==X:
        return O
    else:
        return X

def congrat_winner(the_winner, computer, human):
    if the_winner != TIE:
        print("Три", the_winner, "в ряд")

    if the_winner == computer:
        print("Как я и предсказывал, победа в очередной раз осталась за мной")
    elif the_winner == human:
        print("О нет, неужели ты перехитрил меня")
    elif the_winner == TIE:
        print("Ничья")

def main():
    display_instr()
    computer, human = pieces()
    turn = X
    board = new_board()
    display_board(board)
    while not winner(board):
        if turn == human:
            move = human_move(board,human)
            board[move]=human
        else:
            move = computer_move(board,computer,human)
            board[move] = computer
        display_board(board)
        turn=next_turn(turn)
    the_winner = winner(board)
    congrat_winner(the_winner, computer, human)

main()
input("Нажмите Enter, чтобы выйти")
# Pyatkin Pavel Yur`evich
# Variant 11
# task12
X = "X"
O = "O"
EMPTY = " "
TIE = "Ничья"
NUM_SQUARES = 9

def display_instr():
	print("Инструкция")

def ask_yes_no(question):
	respone = None
	while respone not in ("y","n"):
		respone = input(question).lower()
	return respone

def ask_number(question, low, high):
	respone = None
	while respone not in range(low, high):
		respone = int(input(question))
	return respone

def pieces():
	go_first = ask_yes_no("Хочешь оставить за собой первый ход? (y/n): ")
	if go_first == "y":
		print("Ну что ж, даю тебе фору, играй крестикаи")
		human = X
		computer = O
	else:
		print("Твоя удаль тебя погубит... Буду начинать я.")
		human = O
		computer = X
	return computer,human

def new_board():
	board=[]
	for square in range(NUM_SQUARES):
		board.append(EMPTY)
	return board

def display_board(board):
	print("\n\t",board[0],"|",board[1],"|", board[2])
	print("\t","----------")
	print("\n\t",board[3],"|",board[4],"|", board[5])
	print("\t","----------")
	print("\n\t",board[6],"|",board[7],"|", board[8], "\n")

def legal_moves(board):
	moves=[]
	for square in range(NUM_SQUARES):
		if board[square] == EMPTY:
			moves.append(square)
	return moves

def winner(board):
	WAYS_TO_WIN = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
	for row in WAYS_TO_WIN:
		if board[row[0]] == board[row[1]]==board[row[2]] != EMPTY:
			winner = board[row[0]]
			return winner
	if board_full(board):
		return TIE

def board_full(board):
	for i in range(0, 8):
		if board[i] == EMPTY:
			return False
	return True


def human_move(board,human):
	legal = legal_moves(board)
	move = None
	while move not in legal:
		move = ask_number("Твой ход. Выбери поля (1-9): ", 1, NUM_SQUARES + 1)
		move -= 1
		if move not in legal:
			print("Смешной человек! Это поле уже занято.")
		return move

def computer_move(board, computer, human):
	board = board[:]
	print("Я выберу поле номер", end = " ")
	WAYS_TO_WIN = ((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))
	for row in WAYS_TO_WIN:
		for cell in row:
			if board[cell] == EMPTY:
				board[cell] = computer
				return cell


def next_turn(turn):
	if turn==X:
		return O
	else:
		return X

def congrat_winner(the_winner, computer, human):
	if the_winner != TIE:
		print("Три", the_winner, "в ряд")

	if the_winner == computer:
		print("Как я и предсказывал, победа в очередной раз осталась за мной")
	elif the_winner == human:
		print("О нет, неужели ты перехитрил меня")
	elif the_winner == TIE:
		print("Ничья")

def main():
	display_instr()
	computer, human = pieces()
	turn = X
	board = new_board()
	display_board(board)
	while not winner(board):
		if turn == human:
			move = human_move(board,human)
			board[move]=human
		else:
			move = computer_move(board,computer,human)
			board[move] = computer
		display_board(board)
		turn=next_turn(turn)
	the_winner = winner(board)
	congrat_winner(the_winner, computer, human)

main()
input("Нажмите Enter, чтобы выйти")
